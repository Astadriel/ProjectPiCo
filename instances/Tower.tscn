[gd_scene load_steps=5 format=2]

[ext_resource path="res://sprites/tower1_blue.png" type="Texture" id=1]
[ext_resource path="res://sprites/tower1_red.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]

script/source = "extends Area2D
var color = \"blue\"
var fire_rate = 1
var fire_count = fire_rate/4
var fire_range = 150
var damage = 20
const MISSILE_PATH = \"res://instances/Missile.tscn\"
var missile_velocity = 500
#func _ready():
#	pass

func _process(delta):
	fire_count -= delta
	if fire_count < 0:
		#find a target
		var target = false
		var target_pos_x = -1
		var target_pos_y = -1
		var enemy_offset = -1
		#scans all enemies
		for child in get_tree().get_root().get_node(\"World\").get_node(\"Path_Enemy\").get_children():
			if child.is_in_group(\"enemy\"):
				#select based on color (racism is bad !!!)
				if child.color == color:
					#selection based on hp ...
					if child.hp > 0:
						#distance function not found T_T
						var distance = sqrt(pow(child.global_position.x - global_position.x,2) + pow(child.global_position.y - global_position.y,2))
						#range check
						if distance < fire_range:
							#select the most advanced on the path
							if child.path_advance > enemy_offset:
								enemy_offset = child.path_advance
								#save the position of the most advanced on the path
								target_pos_x = child.global_position.x
								target_pos_y = child.global_position.y
								target = true
								print(\"in range!\")
		if target == true:
			#projectile generation
			var missile_preload = preload(MISSILE_PATH)
			var missile_instance = missile_preload.instance()
			get_tree().get_root().get_node(\"World\").add_child(missile_instance)
			missile_instance.global_position.x = global_position.x
			missile_instance.global_position.y = global_position.y
			missile_instance.color = color
			
			var missile_angle = get_angle_to(Vector2(target_pos_x-global_position.x,target_pos_y-global_position.y))
			var norm_vector = Vector2(sin(missile_angle),cos(missile_angle))
#			missile_instance.velocity = (Vector2(norm_vector.x*missile_velocity,norm_vector.y*missile_velocity))
			fire_count = fire_rate
		else:
			fire_count = fire_rate/4 #re-check faster
			
func _on_Tower_input_event(viewport, event, shape_idx):
	#changing tower color by a mouse click
	if event.is_action_pressed(\"Mouse_Button_Left\"):
			if color == \"blue\":
				color = \"red\"
				get_node(\"Sp_blue_1\").visible = false
				get_node(\"Sp_red_1\").visible = true
			else:
				color = \"blue\"
				get_node(\"Sp_blue_1\").visible = true
				get_node(\"Sp_red_1\").visible = false

"

[sub_resource type="RectangleShape2D" id=2]

custom_solver_bias = 0.0
extents = Vector2( 10, 10 )

[node name="Tower" type="Area2D" index="0"]

input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="." index="0"]

shape = SubResource( 2 )

[node name="Sp_blue_1" type="Sprite" parent="." index="1"]

texture = ExtResource( 1 )

[node name="Sp_red_1" type="Sprite" parent="." index="2"]

visible = false
texture = ExtResource( 2 )

[connection signal="input_event" from="." to="." method="_on_Tower_input_event"]


